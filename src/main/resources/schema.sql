DROP TABLE
  IF EXISTS PUBLIC.FRIENDS;

DROP TABLE
  IF EXISTS PUBLIC.GENRES_FILMS;

DROP TABLE
  IF EXISTS PUBLIC.LIKES;

DROP TABLE
  IF EXISTS PUBLIC.USERS;

DROP TABLE
  IF EXISTS PUBLIC.FILMS;

DROP TABLE
  IF EXISTS PUBLIC.GENRES;

CREATE TABLE
  IF NOT EXISTS USERS (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    LOGIN VARCHAR(50) NOT NULL,
    NAME VARCHAR(100) NULL,
    EMAIL VARCHAR(100) NOT NULL,
    BIRTHDAY DATE NOT NULL,
    CONSTRAINT PK_USERS PRIMARY KEY (ID)
  );

CREATE TABLE
  IF NOT EXISTS FRIENDS (
    REQUESTER_ID INTEGER NOT NULL,
    RESPONDER_ID INTEGER NOT NULL,
    CONSTRAINT PK_FRIENDS PRIMARY KEY (REQUESTER_ID, RESPONDER_ID)
  );

CREATE TABLE
  IF NOT EXISTS FILMS (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION INT NOT NULL,
    MPA_ID INT NOT NULL,
    CONSTRAINT PK_FILMS PRIMARY KEY (ID)
  );

CREATE TABLE
  IF NOT EXISTS LIKES (
    USER_ID INT NOT NULL,
    FILM_ID INT NOT NULL,
    CONSTRAINT PK_LIKES PRIMARY KEY (USER_ID, FILM_ID)
  );

CREATE TABLE
  IF NOT EXISTS GENRES (
    ID INTEGER,
    NAME VARCHAR(50) NOT NULL,
    CONSTRAINT PK_GENRES PRIMARY KEY (ID)
  );

CREATE TABLE
  IF NOT EXISTS GENRES_FILMS (
    GENRE_ID INT NOT NULL,
    FILM_ID INT NOT NULL,
    CONSTRAINT PK_GENRES_FILMS PRIMARY KEY (GENRE_ID, FILM_ID)
  );

CREATE TABLE
  IF NOT EXISTS MPA (
    ID INTEGER,
    NAME VARCHAR(10) NOT NULL,
    CONSTRAINT PK_MPA PRIMARY KEY (ID)
  );

ALTER TABLE
  FILMS
ADD
  CONSTRAINT IF NOT EXISTS FK_FILMS_MPA_ID FOREIGN KEY(MPA_ID) REFERENCES MPA (ID);

ALTER TABLE
  FRIENDS
ADD
  CONSTRAINT IF NOT EXISTS FK_FRIENDS_REQUESTER_ID FOREIGN KEY(REQUESTER_ID) REFERENCES USERS (ID);

ALTER TABLE
  FRIENDS
ADD
  CONSTRAINT IF NOT EXISTS FK_FRIENDS_RESPONDER_ID FOREIGN KEY(RESPONDER_ID) REFERENCES USERS (ID);

ALTER TABLE
  LIKES
ADD
  CONSTRAINT IF NOT EXISTS FK_LIKES_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS (ID);

ALTER TABLE
  LIKES
ADD
  CONSTRAINT IF NOT EXISTS FK_LIKES_FILM_ID FOREIGN KEY(FILM_ID) REFERENCES FILMS (ID);

ALTER TABLE
  GENRES_FILMS
ADD
  CONSTRAINT IF NOT EXISTS FK_GENRES_FILMS_GENRE_ID FOREIGN KEY(GENRE_ID) REFERENCES GENRES (ID);

ALTER TABLE
  GENRES_FILMS
ADD
  CONSTRAINT IF NOT EXISTS FK_GENRES_FILMS_FILM_ID FOREIGN KEY(FILM_ID) REFERENCES FILMS (ID);